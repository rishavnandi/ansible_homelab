---
- name: Update apt packages
  ansible.builtin.apt:
    update_cache: true
    cache_valid_time: 3600
    upgrade: full
  when: ansible_distribution in ["Ubuntu", "Debian"]

- name: Update dnf packages
  ansible.builtin.dnf:
    name: "*"
    state: latest
    update_only: true
  when: ansible_distribution in ["Fedora", "CentOS", "RedHat"]

- name: Install dnf-utils if on Fedora
  ansible.builtin.package:
    name: dnf-utils
    state: present
  when: ansible_distribution in ["Fedora", "CentOS", "RedHat"]

- name: Check if a reboot is required on Fedora
  ansible.builtin.command: needs-restarting -r
  register: reboot_required
  ignore_errors: true
  changed_when: reboot_required.rc != 0
  when: ansible_distribution in ["Fedora", "CentOS", "RedHat"]

- name: Reboot if required on Fedora
  ansible.builtin.reboot:
    msg: Rebooting due to a kernel update
  when: ansible_distribution in ["Fedora", "CentOS", "RedHat "] and reboot_required.rc == 1

- name: Check if reboot required on Ubuntu
  ansible.builtin.stat:
    path: /var/run/reboot-required
  register: reboot_required_file
  when: ansible_distribution in ["Ubuntu", "Debian"]

- name: Reboot if required on Ubuntu
  ansible.builtin.reboot:
    msg: Rebooting due to a kernel update
  when: (ansible_distribution in ["Ubuntu", "Debian"]) and reboot_required_file.stat.exists

- name: Install packages
  ansible.builtin.package:
    name: "{{ packages }}"
    state: present

- name: Install pip packages
  ansible.builtin.pip:
    name: "{{ pip_packages }}"
    state: present
    break_system_packages: true

- name: Create Docker directory
  ansible.builtin.file:
    path: "{{ docker_dir }}"
    state: directory
    owner: "{{ username }}"
    group: "{{ username }}"
    mode: "0755"

- name: Create data directory
  ansible.builtin.file:
    path: "{{ item }}"
    state: directory
    owner: "{{ username }}"
    group: "{{ username }}"
    mode: "0755"
  loop:
    - "{{ data_dir }}"
    - "{{ data_dir }}/torrents"
    - "{{ data_dir }}/media"
    - "{{ data_dir }}/media/movies"
    - "{{ data_dir }}/media/tv"
    - "{{ data_dir }}/torrents/movies"
    - "{{ data_dir }}/torrents/tv"

- name: Create app directories
  ansible.builtin.file:
    path: "{{ item }}"
    state: directory
    owner: "{{ username }}"
    group: "{{ username }}"
    mode: "0755"
  loop:
    - "{{ docker_dir }}/authelia"
    - "{{ docker_dir }}/code_server"
    - "{{ docker_dir }}/dashdot"
    - "{{ docker_dir }}/duplicati"
    - "{{ docker_dir }}/filebrowser"
    - "{{ docker_dir }}/guacamole"
    - "{{ docker_dir }}/heimdall"
    - "{{ docker_dir }}/homarr"
    - "{{ docker_dir }}/jellyfin"
    - "{{ docker_dir }}/jellyseerr"
    - "{{ docker_dir }}/monitoring"
    - "{{ docker_dir }}/n8n"
    - "{{ docker_dir }}/nextcloud"
    - "{{ docker_dir }}/portainer"
    - "{{ docker_dir }}/prowlarr"
    - "{{ docker_dir }}/qbittorrent"
    - "{{ docker_dir }}/radarr"
    - "{{ docker_dir }}/requestrr"
    - "{{ docker_dir }}/sonarr"
    - "{{ docker_dir }}/syncthing"
    - "{{ docker_dir }}/traefik"
    - "{{ docker_dir }}/unmanic"
    - "{{ docker_dir }}/uptime_kuma"
    - "{{ docker_dir }}/vaultwarden"
    - "{{ docker_dir }}/watchtower"
    - "{{ docker_dir }}/wireguard"

- name: Suppress login messages
  ansible.builtin.file:
    name: /home/{{ username }}/.hushlogin
    mode: "0644"
    state: touch
    owner: "{{ username }}"
    group: "{{ username }}"
    modification_time: preserve
    access_time: preserve
